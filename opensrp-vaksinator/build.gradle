buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:1.2.3"
        classpath 'org.robolectric:robolectric-gradle-plugin:1.1.0'
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.8.1'
    }
}

allprojects {
    repositories {
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
        mavenLocal()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

android {
    compileSdkVersion 22
    buildToolsVersion "26.0.1"

    defaultConfig {
        applicationId "org.smartregister.vaksinator"
        minSdkVersion 18
        targetSdkVersion 21
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
        buildConfigField "boolean", "TIME_CHECK", "false"
        resValue "string", 'opensrp_url', '"http://192.168.1.253:9090/opensrp"'
    }


    dexOptions {
        incremental true
        javaMaxHeapSize "4g"
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled true
        }

    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'LICENSE.txt'
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    dexOptions {
        incremental false
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile('org.smartregister:opensrp-client-core:1.1.1-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.guava', module: 'guava'
    }
    compile('org.smartregister:opensrp-client-enketo:1.0.0-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.github.bmelnychuk', module: 'atv'
        exclude group: 'com.google.guava', module: 'guava'
    }

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:design:22.2.1'

    compile 'com.jjoe64:graphview:4.0.1'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.android.support:appcompat-v7:22.2.1'
//    compile project(':json2view')
    compile 'com.google.guava:guava:20.0'

    androidTestCompile 'junit:junit:4.12'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
// Because RxAndroid releases are few and far between, it is recommended you also
// explicitly depend on RxJava's latest version for bug fixes and new features.
    compile 'io.reactivex.rxjava2:rxjava:2.1.5'
    testCompile 'junit:junit:4.12'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
    testCompile('com.squareup:fest-android:1.0.8') { exclude module: 'support-v4' }
    testCompile 'org.robolectric:robolectric:3.4.2'
    testCompile "org.robolectric:shadows-multidex:3.4-rc2"
    // PowerMock
    def powerMockVersion = '1.7.3'
    testCompile "org.powermock:powermock-module-junit4:$powerMockVersion"
    testCompile "org.powermock:powermock-module-junit4-rule:$powerMockVersion"
    testCompile "org.powermock:powermock-api-mockito2:$powerMockVersion"
    testCompile("org.powermock:powermock-classloading-xstream:$powerMockVersion")
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebug']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*', '**/*$ViewBinder*.*']
    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "$project.projectDir/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.buildDir, includes: [
            'jacoco/testDebug.exec', 'outputs/code-coverage/connected/*coverage.ec'
    ])
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}
//tasks.coveralls {
//    dependsOn 'connectedAndroidTest'
//    onlyIf { System.env.'CI' }
//}
